#!/bin/bash
command -v git-lfs >/dev/null 2>&1 || { echo >&2 "\nThis repository is configured for Git LFS but 'git-lfs' was not found on your path. If you no longer wish to use Git LFS, remove this hook by deleting '.git/hooks/post-checkout'.\n"; exit 2; }
git lfs post-checkout "$@"

# bitbucket에서 자동생성한 브랜치를 체크아웃 받을 때 자동 수정할 코드
BRANCH_NAME=$(git symbolic-ref --short HEAD)
BAR_COUNT=$(awk -F"-" '{print NF-1}' <<< "${BRANCH_NAME}")

# 바가 브랜치 이름에 두개 이상 && 브랜치 이름에 한글이 포함되어 있으면
# 브랜치 이름에 키만 남기고 재수정해서 올립니다
if [ ${BAR_COUNT} -gt 1 ] && [[ $BRANCH_NAME =~ ([ㄱ-ㅎㅏ-ㅣ가-힣]+) ]] ; then
    WORD=$(echo ${BRANCH_NAME} | cut -d '-' -f1)
    NUMBER=$(echo ${BRANCH_NAME} | cut -d '-' -f2)
    NEW_BRANCH_NAME=$(echo "${WORD}-${NUMBER}")

    echo ${NEW_BRANCH_NAME}
    # Rename the local branch to the new name
    echo "Rename the local branch to the new name"
    git branch -m ${BRANCH_NAME} ${NEW_BRANCH_NAME}

    # Delete the old branch on remote - where <remote> is, for example, origin
    echo "Delete the old branch on remote - where <remote> is, for example, origin"
    git push origin --delete ${BRANCH_NAME}

    # Prevent git from using the old name when pushing in the next step.
    echo "Prevent git from using the old name when pushing in the next step."
    # Otherwise, git will use the old upstream name instead of <new_name>.
    echo "Otherwise, git will use the old upstream name instead of <new_name>."
    git branch --unset-upstream ${NEW_BRANCH_NAME}

    # Push the new branch to remote
    echo "Push the new branch to remote"
    git push origin ${NEW_BRANCH_NAME}

    # Reset the upstream branch for the new_name local branch
    echo "Reset the upstream branch for the new_name local branch"
    git push origin -u ${NEW_BRANCH_NAME}
fi
